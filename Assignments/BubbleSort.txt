Advantages of Bubble Sort compared to other sorting algorithms:

1. Simplicity: Bubble Sort is straightforward to implement and understand, making it a good choice for small datasets or educational purposes.
2. In-place Sorting: Bubble Sort operates on the input array itself and does not require additional memory, making it space-efficient.
3. Adaptive: It performs well on nearly sorted arrays, as the number of swaps decreases in such cases.

Disadvantages of Bubble Sort compared to other sorting algorithms:

1. Time Complexity: Bubble Sort has a time complexity of O(n^2), which makes it inefficient for large datasets.
2. Performance: It is one of the slowest sorting algorithms, and its performance is significantly worse than more advanced sorting algorithms like Merge Sort and Quick Sort.
3. Lack of Efficiency: Bubble Sort does not take advantage of the inherent structure in the data, leading to unnecessary comparisons and swaps.

output:
print without bubble sort
25
55
88
99
44
66
33
11


After Bubble Sort
11
25
33
44
55
66
88
99


array sorted or not :   True
Time taken to sort 8 in bubble sort: 0.166 milliseconds
print without selection sort
25
55
88
99
44
66
33
11


After selection Sort
11
25
33
44
55
66
88
99


array sorted or not :    True
Time taken to sort 8in selection sort: 0.1931 milliseconds

Conclusion:
	Bubble Sort is a simple and easy-to-understand sorting algorithm, but it is not efficient for large datasets due to its O(n^2) time complexity. As the array size increases, the time taken by Bubble Sort grows significantly, making it less practical for real-world applications. When compared to more advanced algorithms like Merge Sort, Quick Sort, or even Insertion Sort and Selection Sort, Bubble Sort consistently performs poorly. Therefore, for large datasets and production-level applications, it is recommended to use other sorting algorithms that have better average-case time complexities and overall performance.
